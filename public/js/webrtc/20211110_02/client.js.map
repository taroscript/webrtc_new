{"version":3,"file":"client.js","mappings":"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","sources":["webpack://mywebrtc/./src/client.js","webpack://mywebrtc/./src/remote.js","webpack://mywebrtc/./src/video.js","webpack://mywebrtc/./src/webrtc/answer.js","webpack://mywebrtc/./src/webrtc/offer.js","webpack://mywebrtc/./src/webrtc/webrtc.js","webpack://mywebrtc/webpack/bootstrap","webpack://mywebrtc/webpack/runtime/define property getters","webpack://mywebrtc/webpack/runtime/hasOwnProperty shorthand","webpack://mywebrtc/webpack/runtime/make namespace object","webpack://mywebrtc/webpack/before-startup","webpack://mywebrtc/webpack/startup","webpack://mywebrtc/webpack/after-startup"],"sourcesContent":["import {\n\tRemoteHelper,\n} from \"./remote.js\";\n\nimport {\n  start_createOfferSDP,\n  setAnswerSDPthenChatStarts\n} from \"./webrtc/offer.js\"\n\nimport {\n  setOfferSDPandCreateAnswerSDP  \n} from \"./webrtc/answer.js\"\n\nimport {\n  onclickCheckbox_CameraMicrophone,\n  mediaManeger\n} from \"./video.js\"\n\nconsole.log(\"Hello World!\");\n\nexport const g_elementCheckboxCamera = document.getElementById( \"checkbox_camera\" );\nexport const g_elementCheckboxMicrophone = document.getElementById( \"checkbox_microphone\" );\n\nexport const g_elementVideoLocal = document.getElementById( \"video_local\" );\nexport const g_elementAudioLocal = document.getElementById( \"audio_local\" );\nexport const g_elementVideoRemote = document.getElementById( \"video_remote\" );\nexport const g_elementAudioRemote = document.getElementById( \"audio_remote\" );\n\nexport const GlobalRTCParms = {\n  g_rtcPeerConnection : null\n};\n\nexport const g_elementTextareaOfferSideOfferSDP = document.getElementById( \"textarea_offerside_offersdp\" );\nexport const g_elementTextareaAnswerSideAnswerSDP = document.getElementById( \"textarea_answerside_answersdp\" );\n\n\nexport const setEndPoint = (data) => {\n  RemoteHelper.endpoints = data;\n};\n\nexport const connectionType = (type) => {\n  RemoteHelper.type = type;\n}\n\n\n// amend isHostはhostではないとundefinedになっているからconnectionTypeに変更したい。\nexport const videoStart = (isHost) => {\n\n  console.log(\"videoStart\")\n  \n  \n  mediaManeger.bCamera_new = true;\n  g_elementCheckboxCamera.checked=true;\n  mediaManeger.bMicrophone_new = true;\n  \n  onclickCheckbox_CameraMicrophone(()=>{\n    //hostならcreateoffersdp,guestならanswersdp作成\n    console.log(\"isHost\",isHost);\n    GlobalRTCParms.g_rtcPeerConnection = null;\n    if(isHost){\n      console.log(\"host\");\n      start_createOfferSDP();\n    }else{\n      //console.log(\"guset\");\n      //setOfferSDPandCreateAnswerSDP();\n      RemoteHelper.start();\n    }\n  })\n    \n}\n\nexport const retry = () => {\n  GlobalRTCParms.g_rtcPeerConnection = null;\n  \n  if(RemoteHelper.type==\"offer\"){\n    console.log(\"host\");\n    start_createOfferSDP();\n  }\n  else if(RemoteHelper.type=\"answer\"){\n    //console.log(\"guset\");\n    //setOfferSDPandCreateAnswerSDP();\n    RemoteHelper.start();\n  }\n}\n\nRemoteHelper.prepare(\n\n  // offer side\n  (data) => {\n    setAnswerSDPthenChatStarts(data);\n  },\n  //answer side\n  //setOfferSDPandCreateAnswerSDP(data)\n  (data) =>{\n    setOfferSDPandCreateAnswerSDP(data);\n  }\n);\n\n\nexport { RemoteHelper, \n  onclickCheckbox_CameraMicrophone,\n  setAnswerSDPthenChatStarts };","\n\nexport const RemoteHelper = {\n\n  isHost : null,\n  \n  endpoints : {},\n\n  watingSDP : false,\n  \n  type : null,\n\n  start : () => {\n    console.log(\"start polling\");\n    RemoteHelper.waitingSdp = true\n  },\n\n  stop : () => {\n    console.log(\"stop polling\");\n    RemoteHelper.waitingSdp = false\n  },\n\n  emit : (event,options) => {\n\n    // amend options.data.typeにoffer answer情報入っているが使わない?\n    // offer answerの判別はcontroller側で判定\n    const sdp = options.data.sdp;\n    const endpoint = RemoteHelper.endpoints.update_sdp\n\n    $.post(endpoint,{\n      sdp : sdp\n    }, function(res){\n    });\n  },\n\n  prepare : (offerSide_callback,answerSide_callback) => {\n    console.log(\"prepare\");\n    \n    setInterval(function(){\n      \n      console.log(\"prepare setInterval\");\n      \n      if(RemoteHelper.waitingSdp == true){\n        console.log(\"watingSDP = true\");\n        const endpoint = RemoteHelper.endpoints.get_video_info;\n        let callback = null;\n        \n        if(RemoteHelper.type == \"offer\"){\n          callback = offerSide_callback;\n        }\n        else if(RemoteHelper.type == \"answer\"){\n          callback = answerSide_callback;\n        }else{\n          console.log(\"callback empty\")\n          return;\n        }\n        $.ajax({\n          type: \"GET\",\n          url:endpoint,\n          dataType: \"json\"\n        }).done((data)=>{\n          callback(data);\n          // amend stopはsetRemoteDescriptionの後に記述した方がいいのか？\n          \n        });\n      }\n\n    }, 5000);\n    \n    \n  }\n\n};\n","import { \n  g_elementCheckboxCamera,\n  g_elementCheckboxMicrophone,\n  g_elementVideoLocal,\n  g_elementVideoRemote\n} from \"./client.js\";\n\nexport const mediaManeger = {\n\n    bCamera_new : false\n\n}\n\n// カメラとマイクのOn/Offのチェックボックスを押すと呼ばれる関数\nexport const onclickCheckbox_CameraMicrophone = (callback) => {\n    console.log( \"UI Event : Camera/Microphone checkbox clicked.\" );\n\n    // これまでの状態\n    let trackCamera_old = null;\n    let trackMicrophone_old = null;\n    let bCamera_old = false;\n    let bMicrophone_old = false;\n    let stream = g_elementVideoLocal.srcObject;\n    if( stream )\n    {\n        trackCamera_old = stream.getVideoTracks()[0];\n        if( trackCamera_old )\n        {\n            bCamera_old = true;\n        }\n        trackMicrophone_old = stream.getAudioTracks()[0];\n        if( trackMicrophone_old )\n        {\n            bMicrophone_old = true;\n        }\n    }\n\n    // 今後の状態\n    \n    // video startを押したら開始\n    // video startを押していなくても、チェックフラグ＝trueで開始\n    // チェックフラグ=falseで停止\n    let bCamera_new = false;\n    bCamera_new = mediaManeger.bCamera_new;\n\n    if( g_elementCheckboxCamera.checked == false )\n    {\n        bCamera_new = false;\n    }\n    else{\n        bCamera_new = true;\n    }\n\n    let bMicrophone_new = false;\n    bMicrophone_new = mediaManeger.bMicrophone_new;\n    if( g_elementCheckboxMicrophone.checked == false )\n    {\n        bMicrophone_new = false;\n    }\n    else{\n        bMicrophone_new = true;\n    }\n\n    // 状態変化\n    console.log( \"Camera :  %s => %s\", bCamera_old, bCamera_new );\n    console.log( \"Microphoneo : %s = %s\", bMicrophone_old, bMicrophone_new );\n\n    if( bCamera_old === bCamera_new && bMicrophone_old === bMicrophone_new )\n    {   // チェックボックスの状態の変化なし\n        if(callback)callback();\n        return;\n    }\n    console.log(\"trackCamera_old\",trackCamera_old);\n    // 古いメディアストリームのトラックの停止（トラックの停止をせず、HTML要素のstreamの解除だけではカメラは停止しない（カメラ動作LEDは点いたまま））\n    if( trackCamera_old )\n    {\n        console.log( \"Call : trackCamera_old.stop()\" );\n        trackCamera_old.stop();\n    }\n    if( trackMicrophone_old )\n    {\n        console.log( \"Call : trackMicrophone_old.stop()\" );\n        trackMicrophone_old.stop();\n    }\n    // HTML要素のメディアストリームの解除\n    console.log( \"Call : setStreamToElement( Video_Local, null )\" );\n    setStreamToElement( g_elementVideoLocal, null );\n\n    if( !bCamera_new && !bMicrophone_new )\n    {   // （チェックボックスの状態の変化があり、かつ、）カメラとマイクを両方Offの場合\n        return;\n    }\n\n    // （チェックボックスの状態の変化があり、かつ、）カメラとマイクのどちらかもしくはどちらもOnの場合\n\n    // 自分のメディアストリームを取得する。\n    // - 古くは、navigator.getUserMedia() を使用していたが、廃止された。\n    //   現在は、navigator.mediaDevices.getUserMedia() が新たに用意され、これを使用する。\n    console.log( \"Call : navigator.mediaDevices.getUserMedia( video=%s, audio=%s )\", bCamera_new, bMicrophone_new );\n    navigator.mediaDevices.getUserMedia( { video: bCamera_new, audio: bMicrophone_new } )\n        .then( ( stream ) =>\n        {\n            // HTML要素へのメディアストリームの設定\n            console.log( \"Call : setStreamToElement( Video_Local, stream )\" );\n            setStreamToElement( g_elementVideoLocal, stream );\n            console.log(\"setStreamToElement complete\")\n            if(callback)callback();\n        } )\n        .catch( ( error ) =>\n        {\n            // メディアストリームの取得に失敗⇒古いメディアストリームのまま。チェックボックスの状態を戻す。\n            console.error( \"Error : \", error );\n            alert( \"Could not start Camera.\" );\n            g_elementCheckboxCamera.checked = false;\n            g_elementCheckboxMicrophone.checked = false;\n            return;\n        } );\n}\n\n// HTML要素へのメディアストリームの設定（もしくは解除。および開始）\n// HTML要素は、「ローカルもしくはリモート」の「videoもしくはaudio」。\n// メディアストリームは、ローカルメディアストリームもしくはリモートメディアストリーム、もしくはnull。\n// メディアストリームには、Videoトラック、Audioトラックの両方もしくは片方のみが含まれる。\n// メディアストリームに含まれるトラックの種別、設定するHTML要素種別は、呼び出し側で対処する。\nexport function setStreamToElement( elementMedia, stream )\n{   \n    console.log(\"setStreamToElement\")\n    // メディアストリームを、メディア用のHTML要素のsrcObjに設定する。\n    // - 古くは、elementVideo.src = URL.createObjectURL( stream ); のように書いていたが、URL.createObjectURL()は、廃止された。\n    //   現在は、elementVideo.srcObject = stream; のように書く。\n    elementMedia.srcObject = stream;\n\n    if( !stream )\n    {   // メディアストリームの設定解除の場合は、ここで処理終了\n        return;\n    }\n\n    // 音量\n    if( \"VIDEO\" === elementMedia.tagName )\n    {   // VIDEO：ボリュームゼロ、ミュート\n        elementMedia.volume = 0.0;\n        elementMedia.muted = true;\n    }\n    else if( \"AUDIO\" === elementMedia.tagName )\n    {   // AUDIO：ボリュームあり、ミュートでない\n        elementMedia.volume = 1.0;\n        elementMedia.muted = false;\n    }\n    else\n    {\n        console.error( \"Unexpected : Unknown ElementTagName : \", elementMedia.tagName );\n    }\n}","import { \n  g_elementVideoLocal,\n  GlobalRTCParms,\n  RemoteHelper,\n} from \"../client.js\";\nimport {\n  createPeerConnection\n} from \"./webrtc.js\"\n\n\n\n// prepareに渡すcallback関数に変更\nexport const setOfferSDPandCreateAnswerSDP = (data) =>{\n  // amend UI Eventではない\n  console.log( \"UI Event : 'Set OfferSDP and Create AnswerSDP.' button clicked.\" );\n\n  if( GlobalRTCParms.g_rtcPeerConnection )\n  {   // 既にコネクションオブジェクトあり\n      alert( \"Connection object already exists.\" );\n      return;\n  }\n  \n  // const callback = (data) =>{\n  \n  // amend もっと上手い判定の仕方はないのか\n  if( !data.host_join.offer_sdp ){   // OfferSDPが空\n      console.log( \"OfferSDP is empty. Please enter the OfferSDP.\" );\n      return;\n  }\n\n  let strOfferSDP = data.host_join.offer_sdp + \"\\r\\n\";\n  \n  // RTCPeerConnectionオブジェクトの作成\n  console.log( \"Call : createPeerConnection()\" );\n  let rtcPeerConnection = createPeerConnection( g_elementVideoLocal.srcObject );\n  GlobalRTCParms.g_rtcPeerConnection = rtcPeerConnection;    // グローバル変数に設定\n\n  // OfferSDPの設定とAnswerSDPの作成\n  let sessionDescription = new RTCSessionDescription( {\n      type: \"offer\",\n      sdp: strOfferSDP,\n  } );\n  \n  console.log( \"Call : setOfferSDP_and_createAnswerSDP()\" );\n  setOfferSDP_and_createAnswerSDP( rtcPeerConnection, sessionDescription );\n  // }\n\n  // const endpoint = RemoteHelper.endpoints.get_video_info;\n\n  // $.ajax({\n  //     type:\"GET\",\n  //     url:endpoint,\n  //     dataType: \"json\"\n  // }).done((data)=>{\n  //     callback(data.host_join);\n\n  // })\n\n}\n\n// OfferSDPの設定とAnswerSDPの作成\n// amend 関数名何とかならない？上とほぼかぶっている\nfunction setOfferSDP_and_createAnswerSDP( rtcPeerConnection, sessionDescription )\n{\n  console.log( \"Call : rtcPeerConnection.setRemoteDescription()\" );\n  console.log(\"sessionDescription\",sessionDescription);\n  rtcPeerConnection.setRemoteDescription( sessionDescription )\n      .then( () =>\n      {\n          // AnswerSDPの作成\n          console.log( \"Call : rtcPeerConnection.createAnswer()\" );\n          return rtcPeerConnection.createAnswer();\n      } )\n      .then( ( sessionDescription ) =>\n      {\n          // 作成されたAnswerSDPををLocalDescriptionに設定\n          console.log( \"Call : rtcPeerConnection.setLocalDescription()\" );\n          return rtcPeerConnection.setLocalDescription( sessionDescription );\n      } )\n      .then( () =>\n      {\n          // Vanilla ICEの場合は、まだSDPを相手に送らない\n          // Trickle ICEの場合は、初期SDPを相手に送る\n          RemoteHelper.stop();\n      } )\n      .catch( ( error ) =>\n      {\n          console.error( \"Error : \", error );\n      } );\n}","import { \n  g_elementVideoLocal,\n  GlobalRTCParms,\n} from \"../client.js\";\nimport {\n    RemoteHelper\n} from \"../remote.js\";\nimport {\n  createPeerConnection\n} from \"./webrtc.js\"\n\n// 「Create OfferSDP.」ボタンを押すと呼ばれる関数\nexport const start_createOfferSDP = () => {\n    //console.log( \"UI Event : 'Create Offer SDP.' button clicked.\" );\n    console.log( \"Create Offer SDP\" );\n    //let g_rtcPeerConnection = null;\n    if( GlobalRTCParms.g_rtcPeerConnection )\n    {   // 既にコネクションオブジェクトあり\n        alert( \"Connection object already exists.\" );\n        return;\n    }\n    \n    \n    // RTCPeerConnectionオブジェクトの作成\n    console.log( \"Call : createPeerConnection()\" );\n    let rtcPeerConnection = createPeerConnection( g_elementVideoLocal.srcObject );\n    //g_rtcPeerConnection = rtcPeerConnection;    // グローバル変数に設定\n    GlobalRTCParms.g_rtcPeerConnection = rtcPeerConnection;\n\n    // OfferSDPの作成\n    createOfferSDP( rtcPeerConnection );\n    \n}\n\n// OfferSDPの作成\nconst createOfferSDP = ( rtcPeerConnection ) =>{\n  // OfferSDPの作成\n  console.log( \"Call : rtcPeerConnection.createOffer()\" );\n  rtcPeerConnection.createOffer()\n      .then( ( sessionDescription ) =>\n      {\n          // 作成されたOfferSDPををLocalDescriptionに設定\n          console.log( \"Call : rtcPeerConnection.setLocalDescription()\" );\n          return rtcPeerConnection.setLocalDescription( sessionDescription );\n      } )\n      .then( () =>\n      {\n          // Vanilla ICEの場合は、まだSDPを相手に送らない\n          // Trickle ICEの場合は、初期SDPを相手に送る\n      } )\n      .catch( ( error ) =>\n      {\n          console.error( \"Error : \", error );\n      } );\n}\n\n\n// amend pollingでanswersideのsdpが発行された情報を取得する必要あり。\n// 「Set AnswerSDP. Then the chat starts.」ボタンを押すと呼ばれる関数\nexport function setAnswerSDPthenChatStarts(data){\n    // amend buttonではない\n    console.log( \"UI Event : 'Set AnswerSDP. Then the chat starts.' button clicked.\" );\n\n    if( !GlobalRTCParms.g_rtcPeerConnection )\n    {   // コネクションオブジェクトがない\n        alert( \"Connection object does not exist.\" );\n        return;\n    }\n    // const callback = (data) =>{\n    // AnswerSDPを、テキストエリアから取得\n      \n    if( !data.guest_join.answer_sdp ){   \n        // AnswerSDPが空\n        console.log( \"AnswerSDP is empty. Please enter the AnswerSDP.\" );\n        return;\n    }\n\n    if(data.guest_join.updated_at<data.host_join.updated_at){\n        console.log(\"Answer sdp isn't updated\");\n        return;\n    }\n\n    let OfferSideAnswerSDP = data.guest_join.answer_sdp + \"\\r\\n\";\n    console.log(\"OfferSideAnswerSDP\",OfferSideAnswerSDP);\n    // AnswerSDPの設定\n    let sessionDescription = new RTCSessionDescription( {\n        type: \"answer\",\n        sdp: OfferSideAnswerSDP,\n    });\n    //console.log(\"OfferSideAnswerSDP\",OfferSideAnswerSDP);\n    console.log( \"Call : setAnswerSDP()\" );\n\n    setAnswerSDP( GlobalRTCParms.g_rtcPeerConnection, sessionDescription );\n    // }\n  \n    //   const endpoint = RemoteHelper.endpoints.get_video_info;\n    //   $.ajax({\n    //       type:\"GET\",\n    //       url:endpoint,\n    //       dataType: \"json\"\n    //   }).done((data)=>{\n    //       console.log(\"answer data\",data);\n    //       callback(data);\n    //   });\n\n}\n\n// AnswerSDPの設定\nfunction setAnswerSDP( rtcPeerConnection, sessionDescription )\n{\n  console.log( \"Call : rtcPeerConnection.setRemoteDescription()\" );\n  rtcPeerConnection.setRemoteDescription( sessionDescription )\n    .then( () =>\n    {\n        RemoteHelper.stop();\n    } )\n    .catch( ( error ) =>\n    {\n        console.error( \"Error : \", error );\n    } );\n}","\nimport { \n    RemoteHelper\n  } from \"../remote.js\";\n\nimport {\n    setStreamToElement\n} from \"../video.js\"\n\nimport {\n    g_elementVideoLocal,\n    g_elementAudioLocal,\n    g_elementVideoRemote,\n    g_elementAudioRemote,\n    g_elementTextareaOfferSideOfferSDP,\n    g_elementTextareaAnswerSideAnswerSDP,\n    retry,\n    GlobalRTCParms\n} from \"../client.js\"\n\n// RTCPeerConnectionオブジェクトの作成\nexport const createPeerConnection = ( stream ) => {\n    console.log(\"createPeerConnection\");\n    // RTCPeerConnectionオブジェクトの生成\n    let config = { \"iceServers\": [] };\n    let rtcPeerConnection = new RTCPeerConnection( config );\n\n    // RTCPeerConnectionオブジェクトのイベントハンドラの構築\n    setupRTCPeerConnectionEventHandler( rtcPeerConnection );\n\n    // RTCPeerConnectionオブジェクトのストリームにローカルのメディアストリームを追加\n    \n    if( stream )\n    {\n      \n        // - 古くは、RTCPeerConnection.addStream(stream) を使用していたが、廃止予定となった。\n        //   現在は、RTCPeerConnection.addTrack(track, stream) を使用する。\n        stream.getTracks().forEach( ( track ) =>\n        {\n          rtcPeerConnection.addTrack( track, stream );\n        } );\n    }\n    else\n    {\n        console.log( \"No local stream.\" );\n    }\n    \n    return rtcPeerConnection;\n}\n\n\n// RTCPeerConnectionオブジェクトのイベントハンドラの構築\nexport const setupRTCPeerConnectionEventHandler = ( rtcPeerConnection ) => {\n    // Negotiation needed イベントが発生したときのイベントハンドラ\n    // - このイベントは、セッションネゴシエーションを必要とする変更が発生したときに発生する。\n    //   一部のセッション変更はアンサーとしてネゴシエートできないため、このネゴシエーションはオファー側として実行されなければならない。\n    //   最も一般的には、negotiationneededイベントは、RTCPeerConnectionに送信トラックが追加された後に発生する。\n    //   ネゴシエーションがすでに進行しているときに、ネゴシエーションを必要とする方法でセッションが変更された場合、\n    //   ネゴシエーションが完了するまで、negotiationneededイベントは発生せず、ネゴシエーションがまだ必要な場合にのみ発生する。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onnegotiationneeded\n    rtcPeerConnection.onnegotiationneeded = () =>\n    {\n        console.log( \"Event : Negotiation needed\" );\n    };\n\n    // ICE candidate イベントが発生したときのイベントハンドラ\n    // - これは、ローカルのICEエージェントがシグナリング・サーバを介して\n    //   他のピアにメッセージを配信する必要があるときはいつでも発生する。\n    //   これにより、ブラウザ自身がシグナリングに使用されている技術についての詳細を知る必要がなく、\n    //   ICE エージェントがリモートピアとのネゴシエーションを実行できるようになる。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidate\n    rtcPeerConnection.onicecandidate = ( event ) =>\n    {\n        console.log( \"Event : ICE candidate\" );\n        if( event.candidate )\n        {   // ICE candidateがある\n            console.log( \"- ICE candidate : \", event.candidate );\n\n            // Vanilla ICEの場合は、何もしない\n            // Trickle ICEの場合は、ICE candidateを相手に送る\n        }\n        else\n        {   // ICE candiateがない = ICE candidate の収集終了。\n            console.log( \"- ICE candidate : empty\" );\n        }\n    };\n\n    // ICE candidate error イベントが発生したときのイベントハンドラ\n    // - このイベントは、ICE候補の収集処理中にエラーが発生した場合に発生する。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidateerror\n    rtcPeerConnection.onicecandidateerror = ( event ) =>\n    {\n        console.error( \"Event : ICE candidate error. error code : \", event.errorCode );\n    };\n\n    // ICE gathering state change イベントが発生したときのイベントハンドラ\n    // - このイベントは、ICE gathering stateが変化したときに発生する。\n    //   言い換えれば、ICEエージェントがアクティブに候補者を収集しているかどうかが変化したときに発生する。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicegatheringstatechange\n    rtcPeerConnection.onicegatheringstatechange = () =>\n    {\n        console.log( \"Event : ICE gathering state change\" );\n        console.log( \"- ICE gathering state : \", rtcPeerConnection.iceGatheringState );\n\n        if( \"complete\" === rtcPeerConnection.iceGatheringState )\n        {   \n            if(\"offer\" == rtcPeerConnection.localDescription.type)\n            {\n                // Vanilla ICEの場合は、ICE candidateを含んだOfferSDP/AnswerSDPを相手に送る\n                // Trickle ICEの場合は、何もしない\n\n                // Offer側のOfferSDP用のテキストエリアに貼付\n                // amend 以下不要\n                console.log( \"- Set OfferSDP in textarea\" );\n\n                // g_elementTextareaOfferSideOfferSDP.value = rtcPeerConnection.localDescription.sdp;\n                // g_elementTextareaOfferSideOfferSDP.focus();\n                // g_elementTextareaOfferSideOfferSDP.select();\n                \n                RemoteHelper.emit(\"signaling\",{ type:\"offer\", data:rtcPeerConnection.localDescription } );\n                // ここにstart入れている理由は何だっけ??? offer側がanswer側sdpをセットする処理の開始のため\n                RemoteHelper.start();\n            }\n            else if( \"answer\" === rtcPeerConnection.localDescription.type )\n            {\n                // Answer側のAnswerSDP用のテキストエリアに貼付\n                console.log( \"- Set AnswerSDP in textarea\" );\n                // g_elementTextareaAnswerSideAnswerSDP.value = rtcPeerConnection.localDescription.sdp;\n                // g_elementTextareaAnswerSideAnswerSDP.focus();\n                // g_elementTextareaAnswerSideAnswerSDP.select();\n                \n                // amend 上のコードと重複部分消せない?\n                RemoteHelper.emit(\"signaling\",{ type:\"answer\", data:rtcPeerConnection.localDescription } );\n                \n            }\n            else\n            {\n                console.error( \"Unexpected : Unknown localDescription.type. type = \", rtcPeerConnection.localDescription.type );\n            }\n        }\n        \n    };\n\n    // ICE connection state change イベントが発生したときのイベントハンドラ\n    // - このイベントは、ネゴシエーションプロセス中にICE connection stateが変化するたびに発生する。 \n    // - 接続が成功すると、通常、状態は「new」から始まり、「checking」を経て、「connected」、最後に「completed」と遷移します。 \n    //   ただし、特定の状況下では、「connected」がスキップされ、「checking」から「completed」に直接移行する場合があります。\n    //   これは、最後にチェックされた候補のみが成功した場合に発生する可能性があり、成功したネゴシエーションが完了する前に、\n    //   収集信号と候補終了信号の両方が発生します。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event\n    rtcPeerConnection.oniceconnectionstatechange = () =>\n    {\n        console.log( \"Event : ICE connection state change\" );\n        console.log( \"- ICE connection state : \", rtcPeerConnection.iceConnectionState );\n        console.log(\"test:\",rtcPeerConnection.iceConnectionState);\n        // \"disconnected\" : コンポーネントがまだ接続されていることを確認するために、RTCPeerConnectionオブジェクトの少なくとも\n        //                  1つのコンポーネントに対して失敗したことを確認します。これは、\"failed \"よりも厳しいテストではなく、\n        //                  断続的に発生し、信頼性の低いネットワークや一時的な切断中に自然に解決することがあります。問題が\n        //                  解決すると、接続は \"接続済み \"の状態に戻ることがあります。\n        // \"failed\"       : ICE candidateは、すべての候補のペアを互いにチェックしたが、接続のすべてのコンポーネントに\n        //                  互換性のあるものを見つけることができなかった。しかし、ICEエージェントがいくつかの\n        //                  コンポーネントに対して互換性のある接続を見つけた可能性がある。\n        // see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState\n        if(rtcPeerConnection.iceConnectionState == \"disconnected\"){\n            console.log(\"retry\");\n            //console.log(\"RemoteHelper.isHost\",RemoteHelper.isHost);\n            // if(RemoteHelper.type == \"offer\"){\n            //     // host切断時は、offerから再作成するため１からリトライ\n            //     retry();\n            // }\n            // else if(RemoteHelper.type == \"answer\" ){\n            //     //guest切断時は、offer再設定するための、初期化処理\n            //     GlobalRTCParms.g_rtcPeerConnection = null;\n            // }\n            retry();\n            \n        }\n    };\n\n    // Signaling state change イベントが発生したときのイベントハンドラ\n    // - このイベントは、ピア接続のsignalStateが変化したときに送信される。\n    //   これは、setLocalDescription（）またはsetRemoteDescription（）の呼び出しが原因で発生する可能性がある。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onsignalingstatechange\n    rtcPeerConnection.onsignalingstatechange = () =>\n    {\n        console.log( \"Event : Signaling state change\" );\n        console.log( \"- Signaling state : \", rtcPeerConnection.signalingState );\n    };\n\n    // Connection state change イベントが発生したときのイベントハンドラ\n    // - このイベントは、ピア接続の状態が変化したときに送信される。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onconnectionstatechange\n    rtcPeerConnection.onconnectionstatechange = () =>\n    {\n        console.log( \"Event : Connection state change\" );\n        console.log( \"- Connection state : \", rtcPeerConnection.connectionState );\n        // \"disconnected\" : 接続のためのICEトランスポートの少なくとも1つが「disconnected」状態であり、\n        //                  他のトランスポートのどれも「failed」、「connecting」、「checking」の状態ではない。\n        // \"failed\"       : 接続の1つ以上のICEトランスポートが「失敗」状態になっている。\n        // see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionState\n    };\n\n    // Track イベントが発生したときのイベントハンドラ\n    // - このイベントは、新しい着信MediaStreamTrackが作成され、\n    //   コネクション上のレシーバーセットに追加されたRTCRtpReceiverオブジェクトに関連付けられたときに送信される。\n    //   see : https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/ontrack\n    // - 古くは、rtcPeerConnection.onaddstream に設定していたが、廃止された。\n    //   現在は、rtcPeerConnection.ontrack に設定する。\n    rtcPeerConnection.ontrack = ( event ) =>\n    {\n        console.log( \"Event : Track\" );\n        console.log( \"- stream\", event.streams[0] );\n        console.log( \"- track\", event.track );\n        // HTML要素へのリモートメディアストリームの設定\n        let stream = event.streams[0];\n        let track = event.track;\n        if( \"video\" === track.kind )\n        {\n            console.log( \"Call : setStreamToElement( Video_Remote, stream )\" );\n            setStreamToElement( g_elementVideoRemote, stream );\n        }\n        else if( \"audio\" === track.kind )\n        {\n            console.log( \"Call : setStreamToElement( Audio_Remote, stream )\" );\n            setStreamToElement( g_elementAudioRemote, stream );\n        }\n        else\n        {\n            console.error( \"Unexpected : Unknown track kind : \", track.kind );\n        }\n    };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/client.js\");\n",""],"names":["RemoteHelper","start_createOfferSDP","setAnswerSDPthenChatStarts","setOfferSDPandCreateAnswerSDP","onclickCheckbox_CameraMicrophone","mediaManeger","console","log","g_elementCheckboxCamera","document","getElementById","g_elementCheckboxMicrophone","g_elementVideoLocal","g_elementAudioLocal","g_elementVideoRemote","g_elementAudioRemote","GlobalRTCParms","g_rtcPeerConnection","g_elementTextareaOfferSideOfferSDP","g_elementTextareaAnswerSideAnswerSDP","setEndPoint","data","endpoints","connectionType","type","videoStart","isHost","bCamera_new","checked","bMicrophone_new","start","retry","prepare","watingSDP","waitingSdp","stop","emit","event","options","sdp","endpoint","update_sdp","$","post","res","offerSide_callback","answerSide_callback","setInterval","get_video_info","callback","ajax","url","dataType","done","trackCamera_old","trackMicrophone_old","bCamera_old","bMicrophone_old","stream","srcObject","getVideoTracks","getAudioTracks","setStreamToElement","navigator","mediaDevices","getUserMedia","video","audio","then","error","alert","elementMedia","tagName","volume","muted","createPeerConnection","host_join","offer_sdp","strOfferSDP","rtcPeerConnection","sessionDescription","RTCSessionDescription","setOfferSDP_and_createAnswerSDP","setRemoteDescription","createAnswer","setLocalDescription","createOfferSDP","createOffer","guest_join","answer_sdp","updated_at","OfferSideAnswerSDP","setAnswerSDP","config","RTCPeerConnection","setupRTCPeerConnectionEventHandler","getTracks","forEach","track","addTrack","onnegotiationneeded","onicecandidate","candidate","onicecandidateerror","errorCode","onicegatheringstatechange","iceGatheringState","localDescription","oniceconnectionstatechange","iceConnectionState","onsignalingstatechange","signalingState","onconnectionstatechange","connectionState","ontrack","streams","kind"],"sourceRoot":""}